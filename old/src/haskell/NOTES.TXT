pseudocode for launch sequence:
-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
receive stack
copy stack to memory: STACK_ADDR -> +
set sp to STACK_ADDR
pop the virtual stack into start variable:
  start <- deref sp in uc mem
  increment sp: sp += 4
begin execution of emulator at start

>> implement this algo tuesday morning, before pt hits [DONE]

>> then work on a rudimentary G.A.

== 
 
ok, next step is to fire a rop chain at this haskell listener, maybe just
by modifying the lisp agent (send the stack without the header), until
the haskell agent is ready. 

== 
add "packGadget" function :: Gadget -> BS.ByteString
and packRop :: RopChain -> BS.ByteString
where 
type RopChain = [Gadget] for now

